[{"content":"","date":"9 December 2022","permalink":"/tags/dsa/","section":"Tags","summary":"","title":"dsa"},{"content":"","date":"9 December 2022","permalink":"/tags/golang/","section":"Tags","summary":"","title":"golang"},{"content":" Making the world a better place, one line of code at a time Hello, my name is Mohamed Allam. I am a self taught software developer, foremerly PHP \u0026amp; Laravel (My Laravel blog), and currently Go, and system programming. I am very passionate about cutting edge technologies, using them to solve real world problems.\nI enjoy teaching everything I know about code, documenting my journey (versus content create), I love teaching on youtube as well, as this blog, algorithms and data structure are my playground. I also help professionals and companies to build their softwares, and I am open to give private lessons to students and enthousiasts. This in parallel with my interest to help free \u0026amp; open source projects, which has been a beautiful journey.\nI breath O_RDWR code, I would eat and act like a human being. in my free time.\nTake a look ","date":"9 December 2022","permalink":"/","section":"Mohamed Allam","summary":"Making the world a better place, one line of code at a time Hello, my name is Mohamed Allam.","title":"Mohamed Allam"},{"content":" You complicated code problems simplified. üòç This section contains some blog posts that show how to write efficient Go code. You can choose a category or tag page.\nSidenote: If you want to read my code samples content check to the blog section.\n","date":"9 December 2022","permalink":"/blog/","section":"Sipping Go","summary":"You complicated code problems simplified.","title":"Sipping Go"},{"content":"","date":"9 December 2022","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"9 December 2022","permalink":"/tags/trees/","section":"Tags","summary":"","title":"trees"},{"content":"This articles breakdown the terminology used in trees data structure, as well as some types of trees and their use cases, to get familiar with them.\nTrees types and use cases # Whats a tree # A tree is a collection of nodes, each node holds some data, one of the nodes is the root node, and other nodes. are disjoints subsets and each subset is a tree or a sub tree.\nEach node has exactly one parent, and can have one or more children, no single node has more than one parent.\nTrees are everywhere:\nIf you wrote any switch statement but didnt knew why its more efficient than a bunch of if-else statements, the answer is Look up tables (LUT) which may use BST Operating systems use trees for File system. The syntactic representation of a programming language is Abstract syntax tree. AST Browser Document object model (DOM) Databases use Log structured merge tree. LSM tree SQL index use b-tree. Dynamic memory management uses heap. which is a type of a tree. A trie for dictionaries or auto complete algorithms. Priority queues as well use heap. Garbage collectors also use trees. https://en.wikipedia.org/wiki/Tree_(graph_theory)\nhttps://en.wikipedia.org/wiki/Tree_(data_structure)\nNodes or vertices # Nodes is every unit of data\nEdges or paths (links) # Its the connection between each two nodes, if we have N nodes we would have N-1 edges, because each node as parent, except the root node.\nRoot # Is the upmost node, who has no parent, and have only children, for the children nodes this is their most parent node, generally in the top of the tree.\nParent-Children # A node is a parent to its very next descendants. the descendants are the children to whom its connected with one single edge.\nSiblings # Are the children connected to the same node.\nDescendants # When we want to talk about children and their children, and the children of their children..etc we would say descendants.\nIt means the set of nodes we can reach from a particular node going to its children. so all the subtree.\nAnsestors # From that node to the root node, all this nodes are considered anscestors.\nDegree of nodes # Is the number of children a node has, so the direct children.\nA degree of a tree cannot be told from a tree, but its predefined, we can say its a binary tree. but if its unbalanced, we would see it in a form of a linkedlist.\nLeaf nodes, external or terminal # All nodes who has no children. so with nodes with degree 0\nLevels # Levels starting from first level 1, the root, as we categorize each level by all the nodes who take the same number of edges to get to the root node.\nHeight # Hight of nodes, is the same as the levels but it starts from 0, its very useful for analysis.\nForest # A collection of a tree is called a forest. which at least has a root node.\nTo convert a forest to a tree, we attach the roots of the present trees, to one single root.\nTypes of trees # There is many types of trees, and they are extremely useful and popular. for example\nBinary tree # One of the most popular trees, is the binary tree,\nIts tree of degree 2, means every node can have 0,1 or 2 children, but not more than 2.\n$deg(T)=2$\n$children={{0,1,2}}$\nBecause the nodes can have only 2 nodes, we call them left child and right child. or left node and right node. If we come across a tree that is unbalanced, means it forms something like a linked list, but to the left side, we call it left skewed binary tree. or right skewed binary tree Binary search tree # The binary search tree or BST , is a derivate of binary tree, but with a constraint in the data, Its a rooted binary tree, where every node (data) on the left side is grater than nodes on the right side.\n$deg(T)=2$\nAVL Tree # Another tree named after inventors¬†Adelson-Velsky and¬†Landis, is a self balancing binary search tree.\nDecision Tree # Its one of the popular ones for classification and prediction.\nFenwich Tree # A¬†Fenwick tree¬†or¬†binary indexed tree¬†is a data structure that can efficiently update elements and calculate¬†prefix sums¬†in a table of numbers.\nLink to wiki\nLog structured Merge Tree # Or LSM tree one of the trees used in databases like influxDB.\n","date":"9 December 2022","permalink":"/blog/trees-data-structure-with-types-and-use-cases/","section":"Sipping Go","summary":"\u003cp\u003eThis articles breakdown the terminology used in trees data structure, as well as some types of trees and their use cases, to get familiar with them.\u003c/p\u003e","title":"Trees data structure with types (uses cases included)"},{"content":"","date":"11 March 2022","permalink":"/tags/css/","section":"Tags","summary":"","title":"css"},{"content":"","date":"11 March 2022","permalink":"/tags/html/","section":"Tags","summary":"","title":"html"},{"content":"","date":"11 March 2022","permalink":"/tags/markdown/","section":"Tags","summary":"","title":"markdown"},{"content":"This article offers a sample of basic Markdown formatting that can be used in Congo, also it shows how some basic HTML elements are decorated.\nHeadings # The following HTML \u0026lt;h1\u0026gt;‚Äî\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 # H2 # H3 # H4 # H5 # H6 # Paragraph # Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes # The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution # Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution # Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n‚Äî Rob Pike1\nTables # Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables # Italics Bold Code italics bold code Code Blocks # Code block with backticks # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode # 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types # Ordered List # First item Second item Third item Unordered List # List item Another item And another item Nested list # Fruit Apple Orange Banana Dairy Milk Cheese Other Elements ‚Äî abbr, sub, sup, kbd, mark # GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk about nothing during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 March 2022","permalink":"/blog/markdown/","section":"Sipping Go","summary":"\u003cp\u003eThis article offers a sample of basic Markdown formatting that can be used in Congo, also it shows how some basic HTML elements are decorated.\u003c/p\u003e","title":"Markdown"},{"content":"","date":"11 March 2022","permalink":"/tags/sample/","section":"Tags","summary":"","title":"sample"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]